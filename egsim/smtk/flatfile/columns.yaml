# Flatfile Columns Metadata. The syntax for each column (in YAML) is:
#
# <column_name>:
#   dtype:    The data type (default when missing: null). Supported values are: null,
#             int, float, str, datetime (ISO formatted), bool, or the list of the
#             possible values of the column data (which must be all the same dtype).
#             null or missing means "not specified" and will skip data type checks.
#             The dtype determines also how to fill missing data (See `default` below
#             for details), whereas data that is not parsable to the given dtype
#             (e.g.: 'x' for float) will always raise Exceptions
#   default:  The default value to replace missing data (e.g. '', null, NaN). When a
#             default is not provided, it will be `dtype` dependent: NaN (for dtype
#             float), NaT (datetime), None/null (str or categorical), 0 (int), False
#             (bool). As such, please note that int and bool do not really support
#             missing data, as 0 and False also denote valid values for the dtype
#   alias:    The column alias(es), as string or list of strings. You can put here
#             any additional name, e.g., the name of the ground motion property defined
#             in OpenQuake that corresponds to this column, if the names are different.
#             Note that intensity measure columns (see `type` below) must be spelled
#             exactly as in OpenQuake and cannot have aliases
#   type:     The column type (optional): rupture, sites, distance, intensity (rupture
#             parameter, sites parameter, distance measure, intensity measure,
#             respectively). If a type is given, the column name or any of its aliases
#             must match the relative OpenQuake name
#   help:     The field description, used for help. Depending on the application, a
#             default might be provided (e.g. "")
#   ">"       (with quotation marks because > and < are special characters in YAML)
#             The minimum value (endpoint excluded) of the column data. Currently used
#             for info and not to validate or discard data (it might be in the future)
#   ">="      The min. value (endpoint included) of the column data (see ">" for details)
#   "<"       The max. value (endpoint excluded) of the column data (see ">" for details)
#   "<="      The max. value (endpoint included) of the column data (see ">" for details)

# YAML notes:
# Date-times can be given as ISO formatted text, without quotes. Unless required,
# strings don't need quotes either, but can be used for readability. YAML is a
# superset of JSON, so you can type lists as JSON Arrays: [...] and Mappings as JSON
# Objects: {...}. If you want to type over multiple lines for readability, prefix the
# text with >- (see examples here below or at https://stackoverflow.com/a/3790497)

azimuth:
  dtype: float
  type: distance
repi:
  dtype: float
  help: epicentral distance (in km)
  type: distance
rrup:
  dtype: float
  help: >-
    rupture_distance (in km). Missing data (empty or NaN values, column not provided) 
    will be replaced with the hypocentral distance values, if present
  type: distance
rjb:
  dtype: float
  help: >-
    Joyner-Boore distance (in km). Missing data (empty or NaN values, column not provided) 
    will be replaced with the epicentral distance values, if present
  type: distance
rhypo:
  dtype: float
  help: hypocentral distance (in km)
  type: distance
rx:
  dtype: float
  help: >-
    Horizontal distance (in km) from the top of the rupture measured perpendicular to 
    strike. Missing data (empty or NaN values, column not provided) will be replaced 
    with the epicentral distance values, if present
  type: distance
ry0:
  dtype: float
  help: >-
    Horizontal distance (in km) from the top of the rupture measured parallel to strike. 
    Missing data (empty or NaN values, column not provided) will be replaced with the 
    epicentral distance values, if present
  type: distance
rvolc:
  dtype: float
  default: 0
  help: Distance through volcanic zone (km). When missing, it defaults to 0
  type: distance
ev_lat:
  dtype: float
  ">=": -90
  "<=": 90
  help: Event latitude (hypocentre latitude, in deg)
  alias: [hypo_lat, event_latitude]
  type: rupture
ev_lon:
  dtype: float
  ">=": -180
  "<=": 180
  help: Event longitude (hypocentre longitude, in deg)
  alias: [hypo_lon, event_longitude]
  type: rupture
mag:
  dtype: float
  alias: magnitude
  help: event magnitude
  type: rupture
ev_depth:
  dtype: float
  help: event depth (hypocentral depth, in km)
  alias: [hypo_depth, event_depth]
  type: rupture
rupture_top_depth:
  dtype: float
  ">=": 0
  help: Top of Rupture Depth (km)
  alias: [ztor, depth_top_of_rupture]
  type: rupture
rupture_width:
  dtype: float
  ">=": 0
  help: >-
    Down-dip width of the rupture (km). Missing data (empty or NaN values, column not 
    provided) will be derived from the record magnitude using a Magnitude-Scaling 
    Relationship defined for PEER PSHA test cases, and assuming an aspect ratio of 1
  alias: width
  type: rupture
dip:
  dtype: float
  ">=": 0
  "<=": 90
  help: >-
    the angle of the fault relative to the horizontal (deg).
    Hint: in case of more components available (e.g. from web services), the
    correct one should be inferred by the user from the rupture, or can be chosen
    randomly if no information is available
  type: rupture
rake:
  dtype: float
  ">=": -180
  "<=": 180
  help: >-
    the direction the hanging wall moves, relative to the fault strike (deg).
    Hint: in case of more components available (e.g. from
    web services), the correct one should be inferred by the user from the rupture,
    or can be chosen randomly if no information is available
  type: rupture
z1pt0:
  dtype: float
  help: >-
    depth of the layer where seismic waves start to propagate with a speed above 1.0 
    km/sec, in meters. Missing data (empty or NaN values, column not provided) will be 
    derived from the vs30 values (if present) using the Chiou & Youngs (2014) California 
    model
  alias: z1
  type: sites
z2pt5:
  dtype: float
  help: >-
    depth of the layer where seismic waves start to propagate with a speed above 
    2.5 km/sec, in km. Missing data (empty or NaN values, column not provided) will be 
    derived from the record vs30 values (if present) using the Campbell & Bozorgnia 
    (2014) model
  type: sites
vs30:
  dtype: float
  ">=": 0
  help: Average shear wave velocity in the top 30 m, in m/s
  type: sites
backarc:
  dtype: bool
  default: false
  type: sites
  help: >-
    boolean indicating if the site is in the subduction backarc. When missing or false, 
    the site is assumed to be unknown or in the subduction forearc
st_lat:
  dtype: float
  ">=": -90
  "<=": 90
  help: station latitude (deg)
  alias: [station_latitude, lat]  # lat is for compatibility with OpenQuake
  type: sites
st_lon:
  dtype: float
  ">=": -180
  "<=": 180
  help: station longitude (deg)
  alias: [station_longitude, lon]  # lon is for compatibility with OpenQuake
  type: sites
vs30measured:
  dtype: bool
  default: true
  help: whether or not the Vs30 is measured (default true)
  type: sites
xvf:
  dtype: float
  help: distance to the volcanic front (km)
  type: sites
fpeak:
  dtype: float
  ">=": 0
  help: >-
    Frequency that corresponds to the peak of the horizontal to vertical
    spectral ratio (Hz)
  type: sites
region:
  dtype: int
  ">=": 0
  "<=": 5
  default: 0
  help: The ESHM2020 cluster region to which the site belongs
  type: sites
geology:
  dtype: ["CENOZOIC", "HOLOCENE", "JURASSIC-TRIASSIC", "CRETACEOUS", "PALEOZOIC", "PLEISTOCENE", "PRECAMBRIAN", "UNKNOWN"]
  default: UNKNOWN
  help: geological classification of the site
  type: sites
slope:
  dtype: float
  ">": 0
  help: The local slope of the station
  type: sites
PGA:
  dtype: float
  help: Peak ground acceleration, in g
  type: intensity
PGV:
  dtype: float
  help: Peak ground velocity, in cm/s
  type: intensity
SA:
  dtype: float
  help: >-
    Spectral Acceleration, in g. SA columns are in the form "SA(P)",
    where P denotes the period at which it has been computed, in s
  type: intensity
PGD:
  dtype: float
  help: Peak ground displacement during an earthquake measured, in cm
  type: intensity
CAV:
  dtype: float
  help: Cumulative Absolute Velocity, in g-sec
  type: intensity
IA:
  dtype: float
  help: Arias intensity, in m/s
  type: intensity
# ID columns:
ev_id:
  alias: event_id
  help: >-
    The unique ID of the recorded seismic event. If missing, an id is inferred
    from the columns event_latitude, event_longitude, event_depth and event_time 
    (ISO date time), which must all be present.
    In general, you can use the id provided by the event catalog or web service,
    or create your own, as long as it holds: same id <=> same event. IDs should
    be preferably of type integer for performance reasons
st_id:
  alias: station_id
  help: >-
    The unique ID of the seismic station. If missing, an id is inferred
    from the columns station_latitude, station_longitude, which must all be present.
    In general, you can infer the id via the tuple (network_code, station_code)
    or create your own, as long as it holds: same id <=> same station. IDs should
    be preferably of type integer for performance reasons
ev_time:
  alias: event_time
  dtype: datetime
  help: the event time (as ISO formatted string, e.g. 2006-03-31T00:12:24)
